exit
RestClient.get(recipes["href"]) != 200
RestClient.get(recipes["href"]).class
RestClient.get(recipes["href"])
RestClient.get(recipes["href"]).code == 'RestClient::InternalServerError Exception: 500 Internal Server Error'
RestClient.get(recipes["href"]).code == RestClient::InternalServerError Exception: 500 Internal Server Error
RestClient.get(recipes["href"]).code == 500
RestClient.get(recipes["href"]).code == InternalServerError
RestClient.get(recipes["href"]).code
exit
response.code
response
continue
response.code
response
continue
recipes["href"]
recipes
exit
results[:results]
results['results']
results[:href]
results['href']
results
c
split_array
exit
user.recipes
user = User.second
@favorites
user = User.second
user.recipes
user = User.first
@favorites.each do |favorite|
@favorites
c
@favorites
c
params
recipe_params
c
continue
@recipe_array
exit
@recipe_array
@recipe_array.length
exit
@recipe_array.length
exit
@recipe_array.length
exit
@recipe_array.length
@recipe_array
@recipes_array.length
recipes_array.length
exit
recipe_array.length
recipe_array
continue
recipes
exit
recipes
next
recipes
next
recipes
exit
recipes
c
recipes
c
recipes
exit
recipe
continue
recipe
c
recipe
c
recipe
c
recipe
c
recipe
c
recipe
c
recipe
c
recipe
continue
recipe['title']
recipe['title
recipe[:title]
recipe.title
recipe
c
results
c
term
c
term
c
term + items[0] + items [1]
term + items[0]
word = term + items[0]
term
items
c
split_array
continue
word
word = noword+"thisisaword"
noword+ "thisisaword"
noword = ""
split_array
continue
url_safe_search_term
continue
url_safe_search_term
continue
params[:format].split('/')
params[:format]
params.each do |food|
params
@ingredients_array
continue
response
continue
response
continue
@recipe_array
continue
@recipe_array
continue
@recipe_array
continue
@recipe_array.flatten.uniq
@recipe_array
@recipe_array.uniq.flatten
@recipe_array.uniq
@recipe_array
recipe[0].name
recipe[0]
recipe
recipe.name
recipe[:name]
recipe.name
recipe
continue
@ingredients
continue
@user.class
@user.methods
@user
@user.name
@user
continue
{a: 1}.merge({b: 2, a: 3})
{a: 1}.merge({b: 2})
Hash.merge({a: 1}, {b: 2})
params["ingredient"]
params
continue
params
continue
ingredient_params[:name].upcase!
ingredient_params[:name].methods
ingredient_params[:name].uppercase
ingredient_params[:name].upper
ingredient_params[:name].capitalize
ingredient_params[:name]
ingredient_params
params
continue
params
continue
url
